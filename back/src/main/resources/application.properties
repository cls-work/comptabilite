
spring.profiles.active=default


## JWT PROPERTIES
app.jwtSecret= JWTSuperSecretKey
app.jwtExpirationInMs = 604800000


#===========================
#DATA SOURCE
#===========================

# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://localhost:3306/accountingdatabase?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC


#Username and secret
spring.datasource.username=root
spring.datasource.password=root

#Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query= SELECT1


#===========================
# JPA / HIBERNATE
#===========================

#Use spring.jpa.properties.* for Hibernate native properties (the prefix is
#stripped before adding the to the entity manager)

#show or not log for each sql query
spring.jpa.show-sql=true

#Hibernate  ddle auto (create ,create-drop , update ): with "update" the database
#schema will be automatically updated accordingly to java entities found in
#the project
spring.jpa.hibernate.ddl-auto=update

#Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.MySQL8Dialect

#*********************************************Email Send Config*********************************************************************************
spring.mail.host=smtp.gmail.com
spring.mail.username=cls.contact.tunis@gmail.com  
spring.mail.password=clscontact2019
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
support.email=meziane.skander05@gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

spring.mail.properties.mail.smtp.starttls.enable=true

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/resources